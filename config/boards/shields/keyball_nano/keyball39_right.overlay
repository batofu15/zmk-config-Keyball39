/*
 * Copyright (c) 2020 ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#include "keyball39.dtsi"

&default_transform {
    col-offset = <6>;
};

&kscan0 {
	col-gpios
		= <&pro_micro 4 GPIO_ACTIVE_HIGH>
		, <&pro_micro 5 GPIO_ACTIVE_HIGH>
		, <&pro_micro 6 GPIO_ACTIVE_HIGH>
		, <&pro_micro 7 GPIO_ACTIVE_HIGH>
		, <&pro_micro 8 GPIO_ACTIVE_HIGH>
        , <&pro_micro 9 GPIO_ACTIVE_HIGH>
		;
};

&pinctrl {
    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 0, 10)>;
        };
    };

    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 1, 13)>,
                <NRF_PSEL(SPIM_MOSI, 0, 10)>,
                <NRF_PSEL(SPIM_MISO, 0, 10)>;
            low-power-enable;
        };
    };
};

&spi1 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 9 GPIO_ACTIVE_LOW>;

    trackball: trackball@0 {
        status = "okay";
        compatible = "pixart,pmw3610";
        reg = <0>;
        spi-max-frequency = <2000000>;
        irq-gpios = <&gpio1 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        automouse-layer = <4>;
	scroll-layers = <5>;
	snipe-layers = <6>;
    };
};

/ {
  trackball_listener {
    compatible = "zmk,input-listener";
    device = <&trackball>;

  };
};


    // Define the SPI2 instance and its pin configurations.
    // The SK6812 LEDs are controlled via a software SPI driver or a hardware SPI peripheral.
    // Using hardware SPI (like SPI2 here) is generally more reliable and efficient.
    &spi2 {
        status = "okay"; // Enable SPI2

        // Pin control definitions for SPI2.
        // These pins are typically defined in the base board's DTS file (e.g., nice_nano_v2.dts).
        // This section ensures the correct pins are configured for SPI2.
        pinctrl-0 = <&spi2_default>; // Default pin configuration
        pinctrl-1 = <&spi2_sleep>;   // Low-power/sleep pin configuration

        // Define the RGB LED strip itself.
        rgb_strip: ws2812@0 {
            compatible = "worldsemi,ws2812-spi"; // ZMK uses this driver for SK6812 as well
            label = "RGB_STRIP";
            reg = <0>; // Chip Select (CS) line index (not directly used by WS2812, but required for compatible)
            spi-max-frequency = <4000000>; // Max SPI frequency for WS2812/SK6812 (4 MHz)

            // *** CRITICAL: Number of LEDs per half ***
            // The Keyball39 uses 46 SK6812MINI-E LEDs in total,
            // which means 23 LEDs per half.
            chain-length = <23>;

            // *** CRITICAL: Color mapping ***
            // SK6812 LEDs often use GRB (Green, Red, Blue) color order.
            // If your LEDs show incorrect colors (e.g., red when you expect green),
            // you might need to try other mappings like LED_COLOR_ID_RGB.
            color-mapping = <LED_COLOR_ID_GRB>;
        };
    };

    // This block defines the specific GPIO pins for SPI2.
    // It's part of the `pinctrl` node, which manages pin multiplexing.
    // This is where the actual physical pins on the nRF52840 are assigned to SPI2 functions.
    &pinctrl {
        spi2_default: spi2_default_pins {
            group1 {
                // NRF_PSEL(SPIM_SCK, 0, 13) -> SPI Clock (SCK) on P0.13
                // NRF_PSEL(SPIM_MOSI, 0, 15) -> SPI Master Out Slave In (MOSI) on P0.15
                // For WS2812/SK6812, the MOSI pin is the data line.
                // NRF_PSEL_DIS is for unused pins (e.g., MISO for WS2812 as it's one-way)
                psels = <NRF_PSEL(SPIM_SCK, 0, 13)>,
                        <NRF_PSEL(SPIM_MOSI, 0, 15)>,
                        <NRF_PSEL_DIS(SPIM_MISO, 0, 14)>; // MISO (P0.14) is disabled as it's not used by WS2812
            };
        };

        spi2_sleep: spi2_sleep_pins {
            group1 {
                psels = <NRF_PSEL(SPIM_SCK, 0, 13)>,
                        <NRF_PSEL(SPIM_MOSI, 0, 15)>,
                        <NRF_PSEL_DIS(SPIM_MISO, 0, 14)>;
                low-power-enable; // Configure pins for low power during sleep
            };
        };
    };
